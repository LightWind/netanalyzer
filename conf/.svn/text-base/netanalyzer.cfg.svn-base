// NetAnalyzer Signatures file
// Project page: http://code.google.com/p/netanalyzer/
// Author: Elie Bursztein LSV, ENS-Cachan, CNRS, INRIA
// Email: elie@bursztein.eu
// Licence: GPL v2 
// netAnalyzer is (C) Copyright 2008  by Elie Bursztein 

###################Main configuration file of netAnalyzer################
;General information are used to tune the analyzer defaults parameters (override by commande line) 
;and specify additionnal file to include to configuration

<General>

;You can specify here which analyze to run by default
;and there output limit to the n first
;advanced=0;

;session=true;
;sessionlimit=5;

#host=true;
#hostlimit=10;

#protocol=true;
#protocollimit=10;

#user=true;
#userlimit=10;

;software=true;
;softwarelimit=10;

#error=true;
#errorlimit=10;

#network=true;

#tcpdump=true;

;output in xml
;xml=1

;use termcap for colored stdin output ?
;fancy=1

;intervall in sec between stats time 
intervall=30


;len of capture be sur to put the maximum siz of packets
snaplen=1500

;see the debuglevel file to know what level corespond to wath
;debuglevel=1

</General>



###################performance tuning options########################
;be aware of what you are doing by change them

<Tuning>

;Use directionnal (Recommanded) information to pattern match signature and do profiling? in other word do we only look
;at server packet for server signature. This increase perfomance but reverse connection (quite unlikly) will not match
usedirectionnal=1

;Use profile (recommanded) to determine the type of traffic in a stream : based on various discrimators
;See article about it
useprofile=1

;Profiling traffic analysis such as entropy and frequency can be reduce to a part of the n first bytes of the payload to increase speed (0 mean all payload)
#profile_restrict_len=500

;Use pattern matching ? parse payload to match signature (recommanded)
usepattern=1

;Use traffic pattern ? used to match the nature of the stream (need usepattern=1)
usetrafficpattern=1

;Use server pattern ? used to get information about server version and so on (need usepattern=1)
useserverpattern=1

;Use client pattern ? used to get information about client version and so one (need usepattern=1)
useclientpattern=1

;Use file pattern ? used to get information about the nature of files exchanged during a sessions (need usepattern=1)
usefilepattern=1

;Use user pattern ? used to get information about the user of the network (need usepattern=1)
useuserpattern=1

;Use user to user pattern ? used to get information about the relation between network users (need usepattern=1)
useu2upattern=1

;Use error reporting ? used to allow signature to report error or event. If desactivated event and error trigger are ignored
useerrorpattern=1

;Match pattern only against the n first bytes of the payload to speedup the detection (not recommanded)
;pattern_restrict_len=1000

;(Recommanded) Restrict client and server signature to the N first packet of the protocol (init phase).
;TCP handshack are not taken into account
nbpktinit=7

;Restrict the content analysis to the first N packets
nbpktcontent=3

;(NOT recommanded) Force the analyzer to keep trying to find client/server signature even if one is found (perfomance killer)
;patternsignaturemultimatch=1;

;Use advanced session tracking to avoid injection/evasion

useadvancedtracking=1

;(Recommanded) Use chksum covert channel detector ? 

usechkcover=1

;Dump are used to learn or update profile. Regular use have no use of it.
;dump_profile=1
</Tuning>


<Tuning>

;under which probability the analyzer should display all the possible choice. For example 100 means always and 0 never
proba_display=100

####porthint option
;How much confidence do we have in port base heuristic to determine the correct protocol in percentage
port_confidence=70

####criteria weight : to make some more significante than other
weight_port=1
weight_profile=5
weight_pattern=10

</Tuning>
#################### Additional files to parse########################

;Mac address prefix 
include=mac-prefix

;Standard port to service informations
include=services

##### Signature files #####
;Pattern protocols: Used to detect the protocol used in each strem throught pattern matching (inspired by l7 project)
include=control-protocol.rules

;pattern file: used to detect the type of file tranfered in the stream
include=control-file.rules
include=data-file.rules

;Pattern server : 
include=control-server.rules

;Nmap signature server
include=control-server-nmap.rules

;Pattern client:
includecontrol-client.rules

;Pattern User: using our own base
include=control-user.rules

;Alert rules
;include=control-alert.rules
